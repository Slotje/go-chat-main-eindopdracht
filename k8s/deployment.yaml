apiVersion: v1
kind: Namespace
metadata:
  name: go-chat
  labels:
    name: go-chat
    environment: production
    region: fra1

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-chat-app
  namespace: go-chat
  labels:
    app: go-chat
    version: v1.0.0
    environment: production
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: go-chat
  template:
    metadata:
      labels:
        app: go-chat
        version: v1.0.0
    spec:
      containers:
        - name: go-chat
          image: ghcr.io/slotje/go-chat-main-eindopdracht:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
              name: http
          env:
            - name: PORT
              value: "3000"
            - name: ENV
              value: "production"
            - name: NODE_ENV
              value: "production"
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          livenessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
      imagePullSecrets:
        - name: ghcr-secret

---
apiVersion: v1
kind: Service
metadata:
  name: go-chat-service
  namespace: go-chat
  labels:
    app: go-chat
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 3000
      protocol: TCP
      name: http
  selector:
    app: go-chat
  sessionAffinity: ClientIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: go-chat-ingress
  namespace: go-chat
  labels:
    app: go-chat
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/websocket-services: "go-chat-service"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
    - hosts:
        - chat.jouwdomein.nl
      secretName: go-chat-tls
  rules:
    - host: chat.jouwdomein.nl
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: go-chat-service
                port:
                  number: 80